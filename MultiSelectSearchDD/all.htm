<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        .shefu-multi-select-dropdown {
            position: relative;
            width: 100%;
            max-width: 300px;
            font-family: Arial, sans-serif;
            margin-bottom: 10px;
        }

        /* Size Variants */
        .shefu-multi-select-dropdown.small {
            max-width: 200px;
            font-size: 12px;
        }

        .shefu-multi-select-dropdown.medium {
            max-width: 300px;
            font-size: 14px;
        }

        .shefu-multi-select-dropdown.large {
            max-width: 400px;
            font-size: 16px;
        }

        /* Button Styles */
        .shefu-multi-select-dropdown .shefu-dropdown-btn {
            width: 100%;
            background: white;
            border: 1px solid #ccc;
            cursor: pointer;
            text-align: left;
            border-radius: 4px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            transition: all 0.3s ease;
        }

        .shefu-multi-select-dropdown .shefu-dropdown-btn:hover {
            border-color: #666;
            background-color: #f8f9fa;
        }

        /* Size-specific button padding */
        .shefu-multi-select-dropdown.small .shefu-dropdown-btn {
            padding: 6px 8px;
        }

        .shefu-multi-select-dropdown.medium .shefu-dropdown-btn {
            padding: 8px 12px;
        }

        .shefu-multi-select-dropdown.large .shefu-dropdown-btn {
            padding: 12px 16px;
        }

        /* Dropdown Content */
        .shefu-multi-select-dropdown .shefu-dropdown-content {
            display: none;
            position: absolute;
            width: 100%;
            background: white;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-top: 2px;
            overflow-y: auto;
            z-index: 1000;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        /* Size-specific dropdown max-height */
        .shefu-multi-select-dropdown.small .shefu-dropdown-content {
            max-height: 200px;
        }

        .shefu-multi-select-dropdown.medium .shefu-dropdown-content {
            max-height: 300px;
        }

        .shefu-multi-select-dropdown.large .shefu-dropdown-content {
            max-height: 400px;
        }

        /* Search Box */
        .shefu-search-box {
            width: calc(100% - 20px);
            margin: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
            transition: border-color 0.3s ease;
        }

        .shefu-search-box:focus {
            border-color: #4a90e2;
            outline: none;
        }

        /* Size-specific search box */
        .shefu-multi-select-dropdown.small .shefu-search-box {
            padding: 4px 6px;
            font-size: 12px;
        }

        .shefu-multi-select-dropdown.medium .shefu-search-box {
            padding: 6px 8px;
            font-size: 14px;
        }

        .shefu-multi-select-dropdown.large .shefu-search-box {
            padding: 8px 10px;
            font-size: 16px;
        }

        .shefu-multi-select-dropdown .shefu-dropdown-content.show {
            display: block;
        }

        /* Option Styles */
        .shefu-multi-select-dropdown .shefu-option {
            cursor: pointer;
            display: flex;
            align-items: center;
            user-select: none;
            transition: background-color 0.2s ease;
        }

        /* Size-specific option padding */
        .shefu-multi-select-dropdown.small .shefu-option {
            padding: 6px 8px;
        }

        .shefu-multi-select-dropdown.medium .shefu-option {
            padding: 8px 10px;
        }

        .shefu-multi-select-dropdown.large .shefu-option {
            padding: 10px 12px;
        }

        .shefu-multi-select-dropdown .shefu-option:hover {
            background-color: #f1f1f1;
        }

        .shefu-multi-select-dropdown .shefu-option.selected {
            background-color: #e3f2fd;
        }

        .shefu-multi-select-dropdown .shefu-option.hidden {
            display: none;
        }

        /* Checkbox Styles */
        .shefu-multi-select-dropdown .shefu-option input[type="checkbox"] {
            margin-right: 8px;
            pointer-events: none;
        }

        .shefu-multi-select-dropdown .shefu-option label {
            flex-grow: 1;
            cursor: pointer;
            margin: 0;
            pointer-events: none;
        }

        /* Theme Variants */
        .shefu-multi-select-dropdown.primary .shefu-option.selected {
            background-color: #e3f2fd;
        }

        .shefu-multi-select-dropdown.success .shefu-option.selected {
            background-color: #e8f5e9;
        }

        .shefu-multi-select-dropdown.danger .shefu-option.selected {
            background-color: #ffebee;
        }

        /* Mobile Responsiveness */
        @media (max-width: 480px) {

            .shefu-multi-select-dropdown.small,
            .shefu-multi-select-dropdown.medium,
            .shefu-multi-select-dropdown.large {
                max-width: 100%;
            }

            .shefu-multi-select-dropdown .shefu-dropdown-content {
                position: fixed;
                left: 0;
                right: 0;
                top: 50%;
                transform: translateY(-50%);
                max-height: 80vh;
                margin: 10px;
                width: auto;
            }
        }
    </style>
</head>

<body>
    <!-- Example Usage with Different Sizes -->
    <div class="shefu-multi-select-dropdown small" data-placeholder="Small Dropdown">
        <select id="smallDropdown" multiple>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
        </select>
    </div>

    <div class="shefu-multi-select-dropdown medium" data-placeholder="Medium Dropdown">
        <select id="mediumDropdown" multiple>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
        </select>
    </div>

    <div class="shefu-multi-select-dropdown large" data-placeholder="Large Dropdown">
        <select id="largeDropdown" multiple>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
        </select>
    </div>

    <!-- Theme Examples -->
    <div class="shefu-multi-select-dropdown medium primary" data-placeholder="Primary Theme">
        <select id="primaryDropdown" multiple>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
        </select>
    </div>

    <div class="shefu-multi-select-dropdown medium success" data-placeholder="Success Theme">
        <select id="successDropdown" multiple>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
        </select>
    </div>

    <div class="shefu-multi-select-dropdown medium danger" data-placeholder="Danger Theme">
        <select id="dangerDropdown" multiple>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
        </select>
    </div>





    <div class="shefu-multi-select-dropdown medium" data-placeholder="Single Option Example">
        <select id="singleOptionDropdown" multiple>
            <option value="1">Shefain</option>
        </select>
    </div>


    

    <script src="jquery.min.js"></script>


    <script>
        (function ($) {
            $.fn.shefuMultiSelectDropdown = function (options) {
                const defaults = {
                    placeholder: 'Select Options',
                    onChange: null,
                };

                const settings = $.extend({}, defaults, options);

                return this.each(function () {
                    const $container = $(this);
                    const $select = $container.find('select');
                    const placeholder = $container.data('placeholder') || settings.placeholder;
                    const dropdownId = 'shefu-dropdown_' + Math.random().toString(36).substr(2, 9);

                    function createDropdown() {
                        const $button = $('<button>', {
                            class: 'shefu-dropdown-btn',
                            text: placeholder,
                            'data-dropdown': dropdownId
                        });

                        const $dropdownContent = $('<div>', {
                            class: 'shefu-dropdown-content',
                            'data-dropdown': dropdownId
                        });

                        const $searchBox = $('<input>', {
                            type: 'text',
                            class: 'shefu-search-box',
                            placeholder: 'Search...'
                        });

                        const $selectAllOption = $('<div>', {
                            class: 'shefu-option',
                            'data-value': 'select-all'
                        }).append(
                            $('<input>', {
                                type: 'checkbox',
                                id: `shefu-selectAll_${dropdownId}`,
                                checked: true 
                            }),
                            $('<label>', {
                                text: 'Select All'
                            })
                        );

                        $dropdownContent.append($searchBox, $selectAllOption);

                        // Create options
                        $select.find('option').each(function () {
                            const $option = $('<div>', {
                                class: 'shefu-option',
                                'data-value': $(this).val()
                            }).append(
                                $('<input>', {
                                    type: 'checkbox',
                                    value: $(this).val()
                                }),
                                $('<label>', {
                                    text: $(this).text()
                                })
                            );
                            $dropdownContent.append($option);
                        });

                        $select.hide();
                        $container.append($button, $dropdownContent);
                        return { $button, $dropdownContent, $selectAllOption, $searchBox };
                    }

                    const { $button, $dropdownContent, $selectAllOption, $searchBox } = createDropdown();
                    const $optionDivs = $dropdownContent.find('.shefu-option:not(:first-child)');
                    const $selectAllCheckbox = $selectAllOption.find('input[type="checkbox"]');

                    
                    // Modified handleSingleOption function
                    function handleSingleOption() {

                       
                        if ($optionDivs.length === 2) {
                            const $singleOption = $optionDivs.first();
                            const $checkbox = $singleOption.find('input[type="checkbox"]');

                            // Ensure it's checked and trigger change event
                            $checkbox.prop('checked', true).trigger('change');
                            $singleOption.addClass('selected');

                            // Update the button text
                            $button.text($singleOption.find('label').text());

                            // Hide select all option
                            $selectAllOption.hide();

                            // Update the underlying select element
                            const value = $singleOption.data('value');
                            $select.val([value]).trigger('change');

                            // Trigger onChange callback
                            if (settings.onChange) {
                                settings.onChange([value]);
                            }
                        }
                    }

                   

                    // Call handleSingleOption immediately after dropdown creation
                    setTimeout(handleSingleOption, 0);

                    $searchBox.on('input', function () {
                        const searchText = $(this).val().toLowerCase();
                        $optionDivs.each(function () {
                            const optionText = $(this).find('label').text().toLowerCase();
                            $(this).toggleClass('hidden', !optionText.includes(searchText));
                        });

                        const visibleOptions = $optionDivs.not('.hidden').length;
                        if (visibleOptions === 0) {
                            $selectAllOption.hide();
                        } else if ($optionDivs.length > 1) {
                            $selectAllOption.show();
                        }
                    });

                    $button.on('click', function (e) {
                        e.stopPropagation();
                        $('.shefu-dropdown-content').not(`[data-dropdown="${dropdownId}"]`).removeClass('show');
                        $dropdownContent.toggleClass('show');
                        if ($dropdownContent.hasClass('show')) {
                            $searchBox.focus();
                        }
                    });

                    $(document).on('click', function (e) {
                        if (!$(e.target).closest(`[data-dropdown="${dropdownId}"]`).length) {
                            $dropdownContent.removeClass('show');
                        }
                    });

                    $dropdownContent.on('click', '.shefu-option', function (e) {
                        const $checkbox = $(this).find('input[type="checkbox"]');
                        const isSelectAll = $(this).data('value') === 'select-all';

                        if (isSelectAll) {
                            const newState = !$selectAllCheckbox.prop('checked');
                            $selectAllCheckbox.prop('checked', newState);
                            $optionDivs.not('.hidden').find('input[type="checkbox"]').prop('checked', newState);
                            $optionDivs.not('.hidden').toggleClass('selected', newState);
                        } else {
                            // If there's only one option, keep it checked
                            if ($optionDivs.length === 1) {
                                $checkbox.prop('checked', true);
                                $(this).addClass('selected');
                            } else {
                                $checkbox.prop('checked', !$checkbox.prop('checked'));
                                $(this).toggleClass('selected');
                            }

                            const allVisibleChecked = $optionDivs.not('.hidden').find('input[type="checkbox"]:checked').length === $optionDivs.not('.hidden').length;
                            $selectAllCheckbox.prop('checked', allVisibleChecked);
                        }

                        updateButtonText();
                        updateSelectElement();
                    });

                    function updateButtonText() {
                        const $checkedBoxes = $optionDivs.find('input[type="checkbox"]:checked');
                        const checkedCount = $checkedBoxes.length;

                        if (checkedCount === 0) {
                            $button.text(placeholder);
                        } else if (checkedCount === $optionDivs.length) {
                            $button.text('All Selected');
                        } else if (checkedCount === 1) {
                            $button.text($checkedBoxes.first().closest('.shefu-option').find('label').text());
                        } else {
                            $button.text(`${checkedCount} Selected`);
                        }
                    }

                    function updateSelectElement() {
                        const selectedValues = $optionDivs.find('input[type="checkbox"]:checked').map(function () {
                            return $(this).val();
                        }).get();

                        $select.val(selectedValues);
                        $select.trigger('change');

                        if (settings.onChange) {
                            settings.onChange(selectedValues);
                        }
                    }
                });
            };
        })(jQuery);
    </script>


    <script>
        $(document).ready(function () {
            $('.shefu-multi-select-dropdown').shefuMultiSelectDropdown({
                onChange: function (selectedValues) {
                    console.log('Values selected:', selectedValues);
                }
            });

         
        });
    </script>

</body>

</html>